#include<fstream>
#include<cstring>
#include<iomanip>
#include<iostream>
#include<cstring>
#include<cstdlib>
using namespace std;

void fnuser();
string usn;
int login;
void valid(string str)
{
    string dir,user;
    ifstream file;
    dir = str+".txt";
    file.open(dir.c_str());
    if(!file.is_open() && file.fail())
    {
        return;
    }
    else
    {
        login++;
        if(login==3)
        {
            cout<<"\nThis username already exists\nPlease try Again.";
            return;
        }
        cout<<"\nThis username already exists!\nCreate a username:";
        cin>>usn;
        valid(usn);
    }
}

int addlogin()
{
    int choice,i,exit=0;
    string ans,psd,name,fname,bio,usern,pw,line,nusn;
    ofstream fileo;
    ifstream filei;
    while(exit==0)
    {
        cout<<"\nChoose one option:\n1. SignIn/LogIn(press 1 to select this)\n2. SignUp/Register(press 2 to select this)\n\npress any key and enter to exit\n";
        cin>>choice;
        if(choice==1)
        {
            cout<<"Enter your username:";
            cin>>usn;
            cout<<"\nEnter your password:";
            cin>>psd;
            fname=usn+".txt";
            filei.open(fname.c_str());
            if(!filei.is_open() && filei.fail())
            {
                cout<<"\nYou are not registered, please register before logging in.\n";
                filei.close();
                continue;
            }
            getline(filei,usern);
            getline(filei,line);
            getline(filei,pw);
            if(usn==usern && psd==pw)
            {
                cout<<"\nYou are successfully logged in:)\nYOUR PROFILE SAYS:\n";
                cout<<"User-name:"<<usern<<endl;
                cout<<"Name:"<<line<<endl;
                getline(filei,line);
                cout<<"Bio:"<<line<<endl;
                filei.close();
                fnuser();
            }
            else{
                cout<<"\nWrong username or password!\nPlease try Again.\n";
            }
            cout<<endl;
        }
        else if(choice==2)
        {
            cout<<"\nEnter your name:";
            cin.ignore();
            getline(cin,name);
            cout<<"\nCreate a username:";
            cin>>usn;
            login=0;
            valid(usn);
            if(login>=3)
            {
                continue;
            }
            cout<<"\nCreate a password:";
            cin>>psd;
            fname=usn+".txt";
            fileo.open(fname.c_str());
            fileo<<usn<<endl<<name<<endl<<psd<<endl;
            cout<<"\nYou are successfully registered:)";
            cout<<"\nAdd your bio and press enter when you are done:"<<endl;
            cin.ignore();
            getline(cin,bio);
            fileo<<bio<<endl;
            cout<<"\nYour bio is saved as: "<<bio<<"\n\n";
            fileo.close();
            addlogin();
        }
        else
        {
            exit=1;
        }
    }
    return 0;
}
class alogin
{
	string admin;
	public:
	int adlogin()
	{
		cout<<"Enter the admin code"<<endl;
		cin>>admin;
		if(admin=="admin")
		{	
			 int p=getadpassword();
			 if (p==1)
			 {
			 	cout<<"login succesful"<<endl;
			 	return 1;
			 }
		}
		else{
			cout<<"user name not found"<<endl;
			adlogin();
			cout<<"login failed"<<endl;
			return 0;
		}
	return 0;
	}
	int getadpassword();
};	
int alogin::getadpassword()
{
	string pw;
	cout<<"enter the password"<<endl;
	cin>>pw;
	if(pw=="gym")
	{
		cout<<"WELCOME!!"<<endl;
		return 1;
	}
	else{
		cout<<"entered password is incorrect"<<endl;
		getadpassword();
		return 0;
	}
}
void allotment_gold(int gc,int sc)
{
    if(gc!=0)
    {
        cout<<gc<<endl;
        cout<<"trainer alloted\n";
    }
     else
     {
         cout<<"no trainer available\n";
     }
}
void allotment_silver(int gc,int sc)
{
    if(sc!=0)
    {
        cout<<sc<<endl;
        cout<<"trainer alloted\n";
    }
     else
     {
         cout<<"\nno trainer available\n";
         if(gc!=0)
         {
             cout<<"enter  another class\n";
             allotment_gold(gc,sc);
         }
     }
}
int trainee_allotment(char* c)
{	char class_type[10];
    int i,gold_class=3,silver_class=5;
    strcpy(class_type,c);
           		if((gold_class!=0) || (silver_class)!=0)
                    {
                        if(strcmp(class_type,"gold")==0)
                        {
                            gold_class--;
                            allotment_gold(gold_class,silver_class);
                        }
                        else if(strcmp(class_type,"silver")==0)
                        {
                            silver_class--;
                            allotment_silver(gold_class,silver_class);
                        }
                    }
                    else
                    {
                        cout<<"no traianer availbale\n";
                        return 1;
                    }
    return 0;
}
class member
    {
    	int member_number,j;
    	char mem_name[50], classs[50],timings[50];
    	float fee;
    	
	long long int contact;    	
    	public:
     int time_slots()
       {	
			int k;
			cout<<"Please select your preferred timings\nPress 1 for: Morining 6AM-7AM\nPress 2 for: Morning 7AM-8AM\n";
			cout<<"Press 3 for: Evening 5PM-6PM\nPress 4 for: Evening 6PM-7PM\n";
			cin>>k;
			switch(k)
			{
				case 1:strcpy(timings,"6AM-7AM");break;
				case 2:strcpy(timings,"7AM-8AM");break;
				case 3:strcpy(timings,"5PM-6PM");break;
				case 4:strcpy(timings,"6PM-7PM");break;
			}
	return 0;
}	
    	void create_mem()
    	{	int k,l,j;
    		cout<<endl<<"Enter The member Number: ";
    		cin>>member_number;
    		cout<<endl<<"Enter The Name of The member: ";
    		getchar();
    		cin.getline(mem_name ,50);
    		cout<<endl<<"Enter The contact number: ";
    		cin>>contact;
    		cout<<"1.Gold class\n2.Silver class\n";
		cout<<"Enter the choice\n";
		cin>>k;
		switch (k)
		{
			case 1:{strcpy(classs,"Gold");
				fee=2500;
				cout<<"Your monthly fee would be: "<<fee<<endl;
				l=trainee_allotment(classs);
				}
				break;
			case 2:{strcpy(classs,"Silver");
				fee=2000;
				cout<<"Your monthly fee would be: "<<fee<<endl;
				l=trainee_allotment(classs);
				}
				break;
		}
		time_slots();
    	}
    	void show_mem()
    	{
    		cout<<endl<<"Member code: "<<member_number;
    		cout<<endl<<"Name: "<<mem_name;
    		cout<<endl<<"Category: "<<classs;
    		cout<<endl<<"Fee: "<<fee;
    		cout<<endl<<"Contact: "<<contact;
    		cout<<endl<<"Timings: "<<timings<<endl;
    	}
    	int getmem()
    	{
    		return member_number;
    	}
    	float getfee()
    	{
    		return fee;
    	}
    	char* getName()
    	{
    		return mem_name;
    	}
    	float getcontact()
    	{
    		return contact;
    	}
    }; 
    fstream fp;
    member m1;
    void save_member()
    {
    	fp.open("newdata2.txt",ios::out|ios::app);
    	m1.create_mem();
    	fp.write((char*)&m1,sizeof(m1));
    	fp.close();
    	cout<<endl<<endl<<"The member has been successfully added..."<<endl;
    	getchar();
    }
    void show_all()
    {
    	cout<<endl<<"\t\tRECORDS..."<<endl;
    	fp.open("newdata2.txt",ios::in);
    	while(fp.read((char*)&m1,sizeof(m1)))
    	{
    		m1.show_mem();
    		getchar();
    	}
    	fp.close();
    	
    }
     void display_record(int num)
    {
    	bool found=false;
    	fp.open("newdata2.txt",ios::in);
    	while(fp.read((char*)&m1,sizeof(m1)))
    	{
    		if(m1.getmem()==num)
    		{
    			m1.show_mem();
    			found=true;
    		}
    	}
    	fp.close();
    	if(found == false)
    	cout<<"\n\nNo record found"<<endl;
    	getchar();
    }
     void edit_member()
    {
    	int num;
    	bool found=false;
    	cout<<endl<<endl<<"\tPlease Enter The member number: ";
    	cin>>num;
    	fp.open("newdata2.txt",ios::in|ios::out);
    	while(fp.read((char*)&m1,sizeof(m1)) && found==false)
    	{
    		if(m1.getmem()==num)
    		{
    			m1.show_mem();
    			cout<<"\nPlease Enter The New details of the member: "<<endl;
    			m1	.create_mem();
    			int pos=1*sizeof(m1);
    			fp.seekp(pos,ios::cur);
    			fp.write((char*)&m1,sizeof(m1));
    			cout<<endl<<endl<<"\t Record Successfully Updated..."<<endl;
    			found=true;
    		}
    	}
    	fp.close();
    	if(found==false)
    		cout<<endl<<endl<<"Record Not Found..."<<endl;
    	getchar();
    }
    void delete_member()
    {
    	int num;
    	cout<<endl<<endl<<"Please Enter The member number: ";
    	cin>>num;
    	fp.open("newdata2.txt",ios::in|ios::out);
    	fstream fp2;
    	fp2.open("Temp2.txt",ios::out);
    	fp.seekg(0,ios::beg);
    	while(fp.read((char*)&m1,sizeof(m1)))
    	{
    		if(m1.getmem()!=num)
    		{
    			fp2.write((char*)&m1,sizeof(m1));
    		}
    	}
    	fp2.close();
    	fp.close();
    	remove("newdata2.txt");
    	rename("Temp2.txt","newdata2.txt");
    	cout<<endl<<endl<<"\tRecord Deleted..."<<endl;
    	getchar();
    }
     void fnmanage()
    {
    	for(;;)
    	{
    	int option;
    	cout<<"\n\n\t***********************************************";
    	cout<<"\n\tPress 1 to CREATE MEMBER";
    	cout<<"\n\tPress 2 to DISPLAY ALL RECORDS";
    	cout<<"\n\tPress 3 to SEARCH FOR A PARTICULAR RECORD ";
    	cout<<"\n\tPress 4 to EDIT MEMBER DETAILS";
    	cout<<"\n\tPress 5 to DELETE MEMBER";
    	cout<<"\n\t**********************************************";
    	cout<<"\n\n\tOption: ";
    	cin>>option;
    	switch(option)
    	{
    		case 1:	save_member();
    				break;
    				
    		case 2: show_all();
    				break;
    				
    		case 3:
    				int num;
    				cout<<"\n\n\tPlease Enter The member Number: ";
    				cin>>num;
    				display_record(num);
    				break;
    				
    		case 4: edit_member();
    			break;
    		
    		case 5: delete_member();
    		        break;
   				
    		case 6: ;
    				break;
    		default:fnmanage();
    		}
    	}
}
int main()
{
	cout<<"     ______________________________________________________________________\n";
    cout<<"    | *******************WELCOME TO GYM MANAGEMENT*******************      |\n";
    cout<<"    | TRAINER DETAILS                       TRAINER DETAILS:               |\n";
    cout<<"    | Trainer Name:DEVI                     Trainer Name:RANI              |\n";
    cout<<"    | Contact Number:9857848999             Contact Number:9987656785      |\n";
    cout<<"    | Age:24                                Age:30                         |\n";
    cout<<"    | Gender:F                              Gender:F                       |\n"; 
    cout<<"    |______________________________________________________________________|\n";
    cout<<"    | EQUIPMENT DETAILS OF GYM:                                            |\n";
    cout<<"    | Training bench                                                       |\n";
    cout<<"    | Dumbell set                                                          |\n";
    cout<<"    | Treadmill                                                            |\n";
    cout<<"    | Exercise Ball                                                        |\n";
    cout<<"    | Cycling Machine                                                      |\n";
    cout<<"    | Barbell set                                                          |\n";
    cout<<"    | Strech Machine                                                       |\n";
    cout<<"    |______________________________________________________________________|\n";
    cout<<"    | DIET PLAN:                                                           |\n";
    cout<<"    | --TIME --            --MEAL--          --FOOD ITEMS--                |\n";
    cout<<"    | 8:00-9:00AM          Morning           Oat meal + 4 Egg white        |\n";
    cout<<"    | 11:00-12:00AM        Mid morning       Papaya (1 Bowl)               |\n";
    cout<<"    | 2:00-3:00PM          Lunch             2 Roti + Brown rice with curry|\n";
    cout<<"    | 5:00-6:00PM          Snacks            Green tea with dry fruits     |\n";
    cout<<"    | 8:00-9:00PM          Dinner            Seasonal veggies ,sprouts     |\n";
    cout<<"    | 10:30PM              Bed Time          Milk or jeera water           |\n";
    cout<<"    |______________________________________________________________________|\n\n";
	    int i,k,j;
		string name,code;
		while(1)
		{
		cout<<"WELCOME TO SRM GYM MANAGEMENT"<<endl;
		cout<<endl<<"SELECT MODE"<<endl<<"1.User"<<endl<<"2.Admin"<<endl;
		cin>>i;
			if(i==1)
			{
			    cout<<endl<<"You're in user mode"<<endl;
			     addlogin();
			}
			if(i==2){cout<<endl<<"You're in admin mode"<<endl;	
					alogin ad;
					k=ad.adlogin();
					if(k==1)
					{
						fnmanage();
					}
					else
					{
						cout<<"You cannot access manageral details!";
					}
					}
		}
		return 0;
}

void fnuser()
{	
    while(1)
    {
	int m;
	cout<<"\n\n1.Join gym\n2.Quit gym\n3.Edit your profile\n4.No choice";
	cout<<endl<<"Enter your choice:"<<endl;
	cin>>m;
	switch(m)
	{
		case 1:save_member();
    		   break;
    	case 2:delete_member();
    		   break;
    	case 3:edit_member();
    		   break;
    	case 4:main();
	}
}
}